version: '3.6'

volumes:
  postgresql_data:

services:


  wiremock: 
    image: wiremock/wiremock:3.9.1
    container_name: wiremock
    restart: always
    ports:
    - "8087:8080"

  portainer:
    image: portainer/portainer-ce:2.18.2
    container_name: portainer
    restart: always
    command: --admin-password-file=/secrets/admin-password
    ports: 
      - "8084:9000"
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./portainer/admin-password:/secrets/admin-password

  # aasx-fileserver:
  #   image: eclipsebasyx/aasx-fileserver:local
  #   build:
  #     context: ./aasx-fileserver
  #     dockerfile_inline: |
  #       # syntax=docker/dockerfile:1
  #       FROM amazoncorretto:17
  #       USER nobody
  #       WORKDIR /application
  #       COPY target/*-exec.jar basyxExecutable.jar
  #       ENV SERVER_PORT=8080
  #       EXPOSE 8080
  #       HEALTHCHECK --interval=30s --timeout=3s --retries=3 --start-period=15s CMD curl --fail http://localhost:8080/actuator/health || exit 1
  #       ENTRYPOINT ["java","-jar","basyxExecutable.jar"]
  #   restart: always
  #   container_name: aasx-fileserver
  #   ports:
  #   - "8086:8080"
  #   environment:
  #       BASYX_CORS_ALLOWED_ORIGINS: '*'
  #       BASYX_CORS_ALLOWED_METHODS: GET,POST,PATCH,DELETE,PUT,OPTIONS,HEAD


  aas-discovery:
    image: eclipsebasyx/aas-discovery:${BASYX_VERSION}
    restart: always
    container_name: aas-discovery
    ports:
    - "8091:8081"
    environment: 
      BASYX_CORS_ALLOWED_ORIGINS: '*'
      BASYX_CORS_ALLOWED_METHODS: GET,POST,PATCH,DELETE,PUT,OPTIONS,HEAD
      BASYX_FEATURE_AUTHORIZATION_ENABLED: '${AUTHORIZATION_ENABLED}'
      BASYX_FEATURE_AUTHORIZATION_TYPE: rbac
      BASYX_FEATURE_AUTHORIZATION_JWTBEARERTOKENPROVIDER: keycloak
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/EclipseBaSyx
      BASYX_FEATURE_AUTHORIZATION_RBAC_FILE: file:/rbac/rbac_rules.json
    volumes:
    - ./keycloak/rbac_rules-aas-discovery.json:/rbac/rbac_rules.json:ro

  aas-registry:
    image: eclipsebasyx/aas-registry-log-mem:${BASYX_VERSION}
    restart: always
    container_name: aas-registry    
    ports:
    - "8083:8080"
    environment:
      BASYX_CORS_ALLOWED_ORIGINS: '*'
      BASYX_CORS_ALLOWED_METHODS: GET,POST,PATCH,DELETE,PUT,OPTIONS,HEAD
      BASYX_FEATURE_AUTHORIZATION_ENABLED: '${AUTHORIZATION_ENABLED}'
      BASYX_FEATURE_AUTHORIZATION_TYPE: rbac
      BASYX_FEATURE_AUTHORIZATION_JWTBEARERTOKENPROVIDER: keycloak
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/EclipseBaSyx
      BASYX_FEATURE_AUTHORIZATION_RBAC_FILE: file:/rbac/rbac_rules.json
    volumes:
    - ./keycloak/rbac_rules-aas-registry.json:/rbac/rbac_rules.json:ro

  submodel-registry:
    image:  eclipsebasyx/submodel-registry-log-mem:${BASYX_VERSION}
    restart: always
    container_name: submodel-registry
    ports:
    - 8082:8080
    environment:
      BASYX_CORS_ALLOWED_ORIGINS: '*'
      BASYX_CORS_ALLOWED_METHODS: GET,POST,PATCH,DELETE,PUT,OPTIONS,HEAD
      BASYX_FEATURE_AUTHORIZATION_ENABLED: '${AUTHORIZATION_ENABLED}'
      BASYX_FEATURE_AUTHORIZATION_TYPE: rbac
      BASYX_FEATURE_AUTHORIZATION_JWTBEARERTOKENPROVIDER: keycloak
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/EclipseBaSyx
      BASYX_FEATURE_AUTHORIZATION_RBAC_FILE: file:/rbac/rbac_rules.json
    volumes:
      - ./keycloak/rbac_rules-sm-registry.json:/rbac/rbac_rules.json:ro

  aas-environment:
    image: eclipsebasyx/aas-environment:${BASYX_VERSION}
    container_name: aas-environment
    restart: always
    ports:
    - 8081:8081
    environment:
      # we can't autoregister anymore as we are using authorization
      # see client settings -> we publish the descriptor on client side for now
      BASYX_AASREPOSITORY_FEATURE_REGISTRYINTEGRATION: $AAS_REGISTRY_INTEGRATION
      BASYX_SUBMODELREPOSITORY_FEATURE_REGISTRYINTEGRATION: $SUBMODEL_REGISTRY_INTEGRATION
      BASYX_AASREPOSITORY_FEATURE_AASXUPLOAD_ENABLED: "true"   
      BASYX_CORS_ALLOWED_ORIGINS: '*'
      BASYX_CORS_ALLOWED_METHODS: GET,POST,PATCH,DELETE,PUT,OPTIONS,HEAD
      BASYX_EXTERNALURL: http://localhost:8081
      BASYX_FEATURE_AUTHORIZATION_ENABLED: '${AUTHORIZATION_ENABLED}'
      BASYX_FEATURE_AUTHORIZATION_TYPE: rbac
      BASYX_FEATURE_AUTHORIZATION_JWTBEARERTOKENPROVIDER: keycloak
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/EclipseBaSyx
      BASYX_FEATURE_AUTHORIZATION_RBAC_FILE: file:/rbac/rbac_rules.json
      BASYX_ENVIRONMENT: file:/application/files/aasx/
    volumes:
      - ./keycloak/rbac_rules-environment.json:/rbac/rbac_rules.json:ro
      - ./aasx/:/application/files/aasx/
    depends_on:
      aas-registry:
        condition: service_healthy
      submodel-registry:
        condition: service_healthy

  submodel-service:
    image: "eclipsebasyx/submodel-service:${BASYX_VERSION}"
    container_name: submodel-service
    restart: always
    ports:
    - 8079:8081
    volumes: 
    - ./submodel-service/config/application.yml:/application/config/application.yml:ro
    - ./submodel-service/submodel.json:/application/submodel.json
    - ./submodel-service/classes/:/application/classes/
  #  - ./submodel-service/sources/:/application/sources/
  #  - ./submodel-service/libs/:/application/libs/

  postgres:
    image: postgres:${POSTGRES_VERSION}
    container_name: postgres
    restart: always
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    profiles:
      - secure
    healthcheck:
      test: pg_isready
      interval: 1s
      timeout: 5s
      retries: 10

# https://github.com/keycloak/keycloak/issues/11584#issuecomment-1259875983
# https://n-k.de/2024/02/keycloak-set-fixed-issuer.html
# https://github.com/dasniko/keycloak-extensions-demo/blob/main/initializer/src/main/java/dasniko/keycloak/initializer/issuer/IssuerInitializerProvider.java

  keycloak:
    # image: keycloak/keycloak:$KEYCLOAK_VERSION
    image: eclipsebasyx/keycloak:0.0.1
    restart: always
    build:
      context: ./keycloak/initializer
      dockerfile_inline: |
        # syntax=docker/dockerfile:1
        FROM maven:3-eclipse-temurin-17-alpine as build
        WORKDIR /workspace
        COPY ./pom.xml /workspace/pom.xml
        COPY ./src /workspace/src
        RUN mvn install
    
        FROM keycloak/keycloak:$KEYCLOAK_VERSION
        COPY --from=build /workspace/target/org.eclipse.digitaltwin.basyx.v3.clients-keycloak-issuer-initializer.jar /opt/keycloak/providers/issuer-initializer.jar
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_DB_URL_HOST: postgres
      KC_DB_URL_PORT: 5432
      KC_HOSTNAME: localhost
      KC_SPI_INITIALIZER_ISSUER_BASE_URI: http://keycloak:8080
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: keycloak-admin
    command: ["start-dev", "--import-realm"]
    ports:
    - 8085:8080
    profiles:
      - secure
    volumes:
    - ./keycloak/realms:/opt/keycloak/data/import:ro
    # - ./initializer/target/org.eclipse.digitaltwin.basyx.v3.clients-keycloak-issuer-initializer.jar:/opt/keycloak/providers/initializer.jar

  aas-gui:
    image: eclipsebasyx/aas-gui:${AAS_WEBUI_VERSION}
    container_name: aas-gui
    restart: always
    environment:
      CHOKIDAR_USEPOLLING: "true"
      VITE_AAS_REGISTRY_PATH: http://localhost:8083
      VITE_SUBMODEL_REGISTRY_PATH: http://localhost:8082
      VITE_AAS_REPO_PATH: http://localhost:8081/shells
      VITE_SUBMODEL_REPO_PATH: http://localhost:8081/submodels
      VITE_CD_REPO_PATH: http://localhost:8081/concept-descriptions
    ports:
    - 3000:3000
    depends_on:
      aas-registry:
        condition: service_healthy
      submodel-registry:
        condition: service_healthy    
      aas-environment:
        condition: service_healthy
